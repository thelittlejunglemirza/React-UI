 /**
 * @api {post} /api/api Options
 * @apiName Api_api_OPTIONS
 * @apiGroup Api
 * @apiVersion 1.0.0
  * @apiDescription This request will add return the allowed methods, and number of objects in the collection for this
 *                 endpoint.
 *
 * @apiSuccess {Array} allowed_methods Methods allowed for this endpoint.
 * @apiSuccess {Int} number_of_objects  Number of objects in the Tos collection.
 *
 * @apiSuccessExample Success-Response:
 *     HTTP/1.1 200 OK
 *     {
 *         "allowed_methods": ["GET"],
 *         "number_of_objects": 4
 *     }
 */

 /**
 * @api {get} /api/api/:id Get a specific object
 * @apiName Api_object_api_GET
 * @apiGroup Api
 * @apiVersion 1.0.0
 * @apiDescription This endpoint returns the data for an api object.
 *
 * @apiParam  {String} :id  ObjectId of the desired Api Collection entry
 *
 * @apiSuccess {String} _id Unique id generated by MongoDb.
 * @apiSuccess {String} date_created  Timestamp of when the entry was created in database.
 * @apiSuccess {String} api_name Unique name of the api.
 * @apiSuccess {String} provider  Provider of the api.
 * @apiSuccess {String} risk_level  Risk level of this api.
 * @apiSuccess {String} risk_assessment  Risk assessment for this api, generated by an analyst.
 * @apiSuccess {Array} tos  Array of tos id's which belong to this api.
 *
 * @apiSuccessExample Success-Response:
 *     HTTP/1.1 200 OK
 *     {
 *      "_id":"5b2820141c74672ec034627b",
 *      "date_created":"2018-06-18"
 *      "api_name":"Google Maps",
 *      "provider":"apache",
 *      "risk_assessment":"My risk assessment",
 *      "risk_level":"low",
 *      "tos":[
 *          "5b27f51b1c7467155ca60330"
 *          ]
 *     }
 *
 *
 */


/**
 * @api {get} /api/api Get Collection
 * @apiName Api_api_GET
 * @apiGroup Api
 * @apiVersion 1.0.0
 * @apiDescription This endpoint returns the entire Api Collection as seen in the database. This endpoint will only
 *                 return a MAXIMUM of 20 objects at a time, with an offset defined by the user
 *                 (via the header key 'start'). If the offset is larger then the number of objects in the collection
 *                 the endpoint will return 400, the number of objects in this collection can be checked using the options
 *                  endpoint. If start is equal to -1 then the endpoint will return the last 20 objects in reversed order.
 *                  By providing the match key, this endpoint will filter through the database for api_name matching the keys
 *                  value. Note that one of start/match must exist.
 *
 * @apiParam (Headers) {Int} start The number of objects to offset query by.
 * @apiParam (Headers) {String} match The desired search query to match api_name.
 *
 * @apiSuccess {String} _id Unique id generated by MongoDb.
 * @apiSuccess {String} date_created  Date entry was created in db.
 * @apiSuccess {String} url  Url to the Terms Of Service location.
 * @apiSuccess {String} date_reviewed  Timestamp of when the entry was created in database.
 * @apiSuccess {String} provider  The vendor who published this API.
 * @apiSuccess {String} risk_assessment  Risk assessment for this version of the Tos, generated by an analyst.
 * @apiSuccess {String} risk_level  Indicates API's risk level, can be either LOW, MEDIUM, or HIGH.
 * @apiSuccess {String} tos_list  Array of object ID's linking this API to it's subsequent Terms of Service.
 *
 * @apiSuccessExample Success-Response:
 *     HTTP/1.1 200 OK
 *     [
 *          {
 *              "_id":"5b2820141c74672ec034627b",
 *              "date_created":"2018-06-18",
 *              "url":"https://www.apache.org/licenses/LICENSE-2.0",
 *              "date_reviewed":"",
 *              "provider":"apache",
 *              "risk_assessment":"My risk assessment",
 *              "risk_level":"low",
 *              "tos":[
 *                  "5b27f51b1c7467155ca60330"
 *                  ]
 *          },
 *     ]
 *
 * @apiErrorExample {json} ERROR: Key out of range
 *     HTTP/1.1 400 Bad Request
 *     {
 *      "code": 400,
 *      "message": "'start' must be less than the number of objects in the collection (3)"
 *     }
 * @apiErrorExample {json} ERROR: Key DNE or not an integer
 *     HTTP/1.1 400 Bad Request
 *     {
 *      "code": 400,
 *      "message": "request must have the header 'start' with a valid integer value."
 *     }
 *
 */

 /**
 * @api {post} /api/api Add an entry
 * @apiName Api_api_POST
 * @apiGroup Api
 * @apiVersion 1.0.0
 * @apiDescription This request will add an object to the Api collection based on the json body posted. Before an entry
 *                 is made, the server will check that provider, api_name, and tos_list are present and
 *                 valid. Currently this endpoint will only except one
 *                 object at a time.
 *
 * @apiParam {String} api_name  Unique given name of api.
 * @apiParam {String} provider  The vendor who published this API.
 * @apiParam {String} tos_list  Array of object ID's linking this API to it's subsequent Terms of Service.
 *
 * @apiParamExample {json} Request-Example:
 *   {
 *       "provider": "apache",
 *       "api_name": "apache tomcat",
 *       "tos_list": [
 *           "5b27f51b1c7467155ca60330"
 *       ]
 *   }
 *
 * @apiSuccessExample Success-Response:
 *     HTTP/1.1 200 OK
 * @apiErrorExample Error-Response
 *     HTTP/1.1 400 Bad Request
 */

 /**
 * @api {delete} /api/api/:id Delete an entry
 * @apiName Api_object_api_DELETE
 * @apiGroup Api
 * @apiVersion 1.0.0
 * @apiDescription With this request you can delete a Api collection object with a given id. Once sent this instance of the
 *                 Api permanently deleted. Use this endpoint with
 *                 care, use GET /api/api/:id to verify that the id to delete is correct.
 *
 * @apiParam  {String} :id  ObjectId of the desired Tos Collection entry.
 *
 * @apiSuccessExample Success-Response:
 *     HTTP/1.1 200
 * @apiErrorExample Error-Response
 *     HTTP/1.1 400 Bad Request
 */

  /**
 * @api {post} /api/api Change key value
 * @apiName Api_api_PATCH
 * @apiGroup Api
 * @apiVersion 1.0.0
 * @apiDescription This request will change the value of a desired key (risk_assessment or risk_level)
 *
 * @apiParam {String} key  Object's key to be changed.
 * @apiParam {String} value New value.
 *
 * @apiParamExample {json} Request-Example:
 *   {
 *       "key": "risk_assessment",
 *       "value": "do this.",
 *   }
 *
 * @apiSuccessExample Success-Response:
 *     HTTP/1.1 200 OK
 * @apiErrorExample Error-Response
 *     HTTP/1.1 400 Bad Request
 */
