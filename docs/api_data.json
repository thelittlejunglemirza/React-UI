[
  {
    "type": "get",
    "url": "/api/api",
    "title": "Get Collection",
    "name": "Api_api_GET",
    "group": "Api",
    "version": "1.0.0",
    "description": "<p>This endpoint returns the entire Api Collection as seen in the database. This endpoint will only return a MAXIMUM of 20 objects at a time, with an offset defined by the user (via the header key 'start'). If the offset is larger then the number of objects in the collection the endpoint will return 400, the number of objects in this collection can be checked using the options endpoint. If start is equal to -1 then the endpoint will return the last 20 objects in reversed order. By providing the match key, this endpoint will filter through the database for api_name matching the keys value. Note that one of start/match must exist.</p>",
    "parameter": {
      "fields": {
        "Headers": [
          {
            "group": "Headers",
            "type": "Int",
            "optional": false,
            "field": "start",
            "description": "<p>The number of objects to offset query by.</p>"
          },
          {
            "group": "Headers",
            "type": "String",
            "optional": false,
            "field": "match",
            "description": "<p>The desired search query to match api_name.</p>"
          }
        ]
      }
    },
    "success": {
      "fields": {
        "Success 200": [
          {
            "group": "Success 200",
            "type": "String",
            "optional": false,
            "field": "_id",
            "description": "<p>Unique id generated by MongoDb.</p>"
          },
          {
            "group": "Success 200",
            "type": "String",
            "optional": false,
            "field": "date_created",
            "description": "<p>Date entry was created in db.</p>"
          },
          {
            "group": "Success 200",
            "type": "String",
            "optional": false,
            "field": "url",
            "description": "<p>Url to the Terms Of Service location.</p>"
          },
          {
            "group": "Success 200",
            "type": "String",
            "optional": false,
            "field": "date_reviewed",
            "description": "<p>Timestamp of when the entry was created in database.</p>"
          },
          {
            "group": "Success 200",
            "type": "String",
            "optional": false,
            "field": "provider",
            "description": "<p>The vendor who published this API.</p>"
          },
          {
            "group": "Success 200",
            "type": "String",
            "optional": false,
            "field": "risk_assessment",
            "description": "<p>Risk assessment for this version of the Tos, generated by an analyst.</p>"
          },
          {
            "group": "Success 200",
            "type": "String",
            "optional": false,
            "field": "risk_level",
            "description": "<p>Indicates API's risk level, can be either LOW, MEDIUM, or HIGH.</p>"
          },
          {
            "group": "Success 200",
            "type": "String",
            "optional": false,
            "field": "tos_list",
            "description": "<p>Array of object ID's linking this API to it's subsequent Terms of Service.</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "Success-Response:",
          "content": "HTTP/1.1 200 OK\n[\n     {\n         \"_id\":\"5b2820141c74672ec034627b\",\n         \"date_created\":\"2018-06-18\",\n         \"url\":\"https://www.apache.org/licenses/LICENSE-2.0\",\n         \"date_reviewed\":\"\",\n         \"provider\":\"apache\",\n         \"risk_assessment\":\"My risk assessment\",\n         \"risk_level\":\"low\",\n         \"tos\":[\n             \"5b27f51b1c7467155ca60330\"\n             ]\n     },\n]",
          "type": "json"
        }
      ]
    },
    "error": {
      "examples": [
        {
          "title": "ERROR: Key out of range",
          "content": "HTTP/1.1 400 Bad Request\n{\n \"code\": 400,\n \"message\": \"'start' must be less than the number of objects in the collection (3)\"\n}",
          "type": "json"
        },
        {
          "title": "ERROR: Key DNE or not an integer",
          "content": "HTTP/1.1 400 Bad Request\n{\n \"code\": 400,\n \"message\": \"request must have the header 'start' with a valid integer value.\"\n}",
          "type": "json"
        }
      ]
    },
    "filename": "./API_docs/Api.js",
    "groupTitle": "Api"
  },
  {
    "type": "post",
    "url": "/api/api",
    "title": "Options",
    "name": "Api_api_OPTIONS",
    "group": "Api",
    "version": "1.0.0",
    "description": "<p>This request will add return the allowed methods, and number of objects in the collection for this endpoint.</p>",
    "success": {
      "fields": {
        "Success 200": [
          {
            "group": "Success 200",
            "type": "Array",
            "optional": false,
            "field": "allowed_methods",
            "description": "<p>Methods allowed for this endpoint.</p>"
          },
          {
            "group": "Success 200",
            "type": "Int",
            "optional": false,
            "field": "number_of_objects",
            "description": "<p>Number of objects in the Tos collection.</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "Success-Response:",
          "content": "HTTP/1.1 200 OK\n{\n    \"allowed_methods\": [\"GET\"],\n    \"number_of_objects\": 4\n}",
          "type": "json"
        }
      ]
    },
    "filename": "./API_docs/Api.js",
    "groupTitle": "Api"
  },
  {
    "type": "post",
    "url": "/api/api",
    "title": "Change key value",
    "name": "Api_api_PATCH",
    "group": "Api",
    "version": "1.0.0",
    "description": "<p>This request will change the value of a desired key (risk_assessment or risk_level)</p>",
    "parameter": {
      "fields": {
        "Parameter": [
          {
            "group": "Parameter",
            "type": "String",
            "optional": false,
            "field": "key",
            "description": "<p>Object's key to be changed.</p>"
          },
          {
            "group": "Parameter",
            "type": "String",
            "optional": false,
            "field": "value",
            "description": "<p>New value.</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "Request-Example:",
          "content": "{\n    \"key\": \"risk_assessment\",\n    \"value\": \"do this.\",\n}",
          "type": "json"
        }
      ]
    },
    "success": {
      "examples": [
        {
          "title": "Success-Response:",
          "content": "HTTP/1.1 200 OK",
          "type": "json"
        }
      ]
    },
    "error": {
      "examples": [
        {
          "title": "Error-Response",
          "content": "HTTP/1.1 400 Bad Request",
          "type": "json"
        }
      ]
    },
    "filename": "./API_docs/Api.js",
    "groupTitle": "Api"
  },
  {
    "type": "post",
    "url": "/api/api",
    "title": "Add an entry",
    "name": "Api_api_POST",
    "group": "Api",
    "version": "1.0.0",
    "description": "<p>This request will add an object to the Api collection based on the json body posted. Before an entry is made, the server will check that provider, api_name, and tos_list are present and valid. Currently this endpoint will only except one object at a time.</p>",
    "parameter": {
      "fields": {
        "Parameter": [
          {
            "group": "Parameter",
            "type": "String",
            "optional": false,
            "field": "api_name",
            "description": "<p>Unique given name of api.</p>"
          },
          {
            "group": "Parameter",
            "type": "String",
            "optional": false,
            "field": "provider",
            "description": "<p>The vendor who published this API.</p>"
          },
          {
            "group": "Parameter",
            "type": "String",
            "optional": false,
            "field": "tos_list",
            "description": "<p>Array of object ID's linking this API to it's subsequent Terms of Service.</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "Request-Example:",
          "content": "{\n    \"provider\": \"apache\",\n    \"api_name\": \"apache tomcat\",\n    \"tos_list\": [\n        \"5b27f51b1c7467155ca60330\"\n    ]\n}",
          "type": "json"
        }
      ]
    },
    "success": {
      "examples": [
        {
          "title": "Success-Response:",
          "content": "HTTP/1.1 200 OK",
          "type": "json"
        }
      ]
    },
    "error": {
      "examples": [
        {
          "title": "Error-Response",
          "content": "HTTP/1.1 400 Bad Request",
          "type": "json"
        }
      ]
    },
    "filename": "./API_docs/Api.js",
    "groupTitle": "Api"
  },
  {
    "type": "delete",
    "url": "/api/api/:id",
    "title": "Delete an entry",
    "name": "Api_object_api_DELETE",
    "group": "Api",
    "version": "1.0.0",
    "description": "<p>With this request you can delete a Api collection object with a given id. Once sent this instance of the Api permanently deleted. Use this endpoint with care, use GET /api/api/:id to verify that the id to delete is correct.</p>",
    "parameter": {
      "fields": {
        "Parameter": [
          {
            "group": "Parameter",
            "type": "String",
            "optional": false,
            "field": ":id",
            "description": "<p>ObjectId of the desired Tos Collection entry.</p>"
          }
        ]
      }
    },
    "success": {
      "examples": [
        {
          "title": "Success-Response:",
          "content": "HTTP/1.1 200",
          "type": "json"
        }
      ]
    },
    "error": {
      "examples": [
        {
          "title": "Error-Response",
          "content": "HTTP/1.1 400 Bad Request",
          "type": "json"
        }
      ]
    },
    "filename": "./API_docs/Api.js",
    "groupTitle": "Api"
  },
  {
    "type": "get",
    "url": "/api/api/:id",
    "title": "Get a specific object",
    "name": "Api_object_api_GET",
    "group": "Api",
    "version": "1.0.0",
    "description": "<p>This endpoint returns the data for an api object.</p>",
    "parameter": {
      "fields": {
        "Parameter": [
          {
            "group": "Parameter",
            "type": "String",
            "optional": false,
            "field": ":id",
            "description": "<p>ObjectId of the desired Api Collection entry</p>"
          }
        ]
      }
    },
    "success": {
      "fields": {
        "Success 200": [
          {
            "group": "Success 200",
            "type": "String",
            "optional": false,
            "field": "_id",
            "description": "<p>Unique id generated by MongoDb.</p>"
          },
          {
            "group": "Success 200",
            "type": "String",
            "optional": false,
            "field": "date_created",
            "description": "<p>Timestamp of when the entry was created in database.</p>"
          },
          {
            "group": "Success 200",
            "type": "String",
            "optional": false,
            "field": "api_name",
            "description": "<p>Unique name of the api.</p>"
          },
          {
            "group": "Success 200",
            "type": "String",
            "optional": false,
            "field": "provider",
            "description": "<p>Provider of the api.</p>"
          },
          {
            "group": "Success 200",
            "type": "String",
            "optional": false,
            "field": "risk_level",
            "description": "<p>Risk level of this api.</p>"
          },
          {
            "group": "Success 200",
            "type": "String",
            "optional": false,
            "field": "risk_assessment",
            "description": "<p>Risk assessment for this api, generated by an analyst.</p>"
          },
          {
            "group": "Success 200",
            "type": "Array",
            "optional": false,
            "field": "tos",
            "description": "<p>Array of tos id's which belong to this api.</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "Success-Response:",
          "content": "HTTP/1.1 200 OK\n{\n \"_id\":\"5b2820141c74672ec034627b\",\n \"date_created\":\"2018-06-18\"\n \"api_name\":\"Google Maps\",\n \"provider\":\"apache\",\n \"risk_assessment\":\"My risk assessment\",\n \"risk_level\":\"low\",\n \"tos\":[\n     \"5b27f51b1c7467155ca60330\"\n     ]\n}",
          "type": "json"
        }
      ]
    },
    "filename": "./API_docs/Api.js",
    "groupTitle": "Api"
  },
  {
    "success": {
      "fields": {
        "Success 200": [
          {
            "group": "Success 200",
            "optional": false,
            "field": "varname1",
            "description": "<p>No type.</p>"
          },
          {
            "group": "Success 200",
            "type": "String",
            "optional": false,
            "field": "varname2",
            "description": "<p>With type.</p>"
          }
        ]
      }
    },
    "type": "",
    "url": "",
    "version": "0.0.0",
    "filename": "./docs/main.js",
    "group": "C__Users_I865301_Desktop_WASP_docs_main_js",
    "groupTitle": "C__Users_I865301_Desktop_WASP_docs_main_js",
    "name": ""
  },
  {
    "type": "get",
    "url": "/api/project",
    "title": "Get Collection",
    "name": "Project_api_GET",
    "group": "Project",
    "version": "1.0.0",
    "description": "<p>This endpoint returns the entire Project Collection as seen in the database. This endpoint will only return a MAXIMUM of 20 objects at a time, with an offset defined by the user (via the header key 'start'). If the offset is larger then the number of objects in the collection the endpoint will return 400, the number of objects in this collection can be checked using the options endpoint. If start is equal to -1 then the endpoint will return the last 20 objects in reversed order. By providing the match key, this endpoint will filter through the database for project_name matching the keys value. Note that one of start/match must exist.</p>",
    "parameter": {
      "fields": {
        "Headers": [
          {
            "group": "Headers",
            "type": "Int",
            "optional": false,
            "field": "start",
            "description": "<p>The number of objects to offset query by.</p>"
          },
          {
            "group": "Headers",
            "type": "String",
            "optional": false,
            "field": "match",
            "description": "<p>The desired search query to match project_name.</p>"
          }
        ]
      }
    },
    "success": {
      "fields": {
        "Success 200": [
          {
            "group": "Success 200",
            "type": "String",
            "optional": false,
            "field": "_id",
            "description": "<p>Unique id generated by MongoDb.</p>"
          },
          {
            "group": "Success 200",
            "type": "String",
            "optional": false,
            "field": "date_created",
            "description": "<p>Date entry was created in db.</p>"
          },
          {
            "group": "Success 200",
            "type": "String",
            "optional": false,
            "field": "project_name",
            "description": "<p>Unique name of project defined by project admin.</p>"
          },
          {
            "group": "Success 200",
            "type": "String",
            "optional": false,
            "field": "review_status",
            "description": "<p>Status of reviewing process(not reviewed, in progress, reviewed).</p>"
          },
          {
            "group": "Success 200",
            "type": "String",
            "optional": false,
            "field": "api_list",
            "description": "<p>Array of object ID's linking this Project to it's subsequent API's.</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "Success-Response:",
          "content": "HTTP/1.1 200 OK\n[\n     {\n         \"_id\":\"5b2820141c74672ec034627b\",\n         \"date_created\":\"2018-06-18\",\n         \"project_name\":\"Priority Marker\",\n         \"review_status\": \"reviewed\"\n         \"api_list\":[\n             \"5b27f51b1c7467155ca60330\"\n             ]\n     },\n]",
          "type": "json"
        }
      ]
    },
    "error": {
      "examples": [
        {
          "title": "ERROR: Key out of range",
          "content": "HTTP/1.1 400 Bad Request\n{\n \"code\": 400,\n \"message\": \"'start' must be less than the number of objects in the collection (3)\"\n}",
          "type": "json"
        },
        {
          "title": "ERROR: Key DNE or not an integer",
          "content": "HTTP/1.1 400 Bad Request\n{\n \"code\": 400,\n \"message\": \"request must have the header 'start' with a valid integer value.\"\n}",
          "type": "json"
        }
      ]
    },
    "filename": "./API_docs/Project.js",
    "groupTitle": "Project"
  },
  {
    "type": "get",
    "url": "/api/project",
    "title": "Options",
    "name": "Project_api_OPTIONS",
    "group": "Project",
    "version": "1.0.0",
    "description": "<p>This request will add return the allowed methods, and number of objects in the collection for this endpoint</p>",
    "success": {
      "fields": {
        "Success 200": [
          {
            "group": "Success 200",
            "type": "Array",
            "optional": false,
            "field": "allowed_methods",
            "description": "<p>Methods allowed for this endpoint.</p>"
          },
          {
            "group": "Success 200",
            "type": "Int",
            "optional": false,
            "field": "number_of_objects",
            "description": "<p>Number of objects in the Tos collection.</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "Success-Response:",
          "content": "HTTP/1.1 200 OK\n{\n    \"allowed_methods\": [\"GET\"],\n    \"number_of_objects\": 4\n}",
          "type": "json"
        }
      ]
    },
    "filename": "./API_docs/Project.js",
    "groupTitle": "Project"
  },
  {
    "type": "post",
    "url": "/api/project",
    "title": "Add an entry",
    "name": "Project_api_POST",
    "group": "Project",
    "version": "1.0.0",
    "description": "<p>This request will add an object to the Project collection based on the json body posted. Before an entry is made, the server will check that each parameter is present and valid. Request not work if project_name already exists. Currently this endpoint will only except one object at a time.</p>",
    "parameter": {
      "fields": {
        "Parameter": [
          {
            "group": "Parameter",
            "type": "String",
            "optional": false,
            "field": "project_name",
            "description": "<p>Unique given name of api.</p>"
          },
          {
            "group": "Parameter",
            "type": "String",
            "optional": false,
            "field": "tos_list",
            "description": "<p>Array of object ID's linking this Project to it's subsequent API's.</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "Request-Example:",
          "content": "{\n    \"project_name\": \"apache tomcat\",\n    \"api_list\": [\n        \"5b27f51b1c7467155ca60330\"\n    ]\n}",
          "type": "json"
        }
      ]
    },
    "success": {
      "examples": [
        {
          "title": "Success-Response:",
          "content": "HTTP/1.1 200 OK",
          "type": "json"
        }
      ]
    },
    "error": {
      "examples": [
        {
          "title": "Error-Response",
          "content": "HTTP/1.1 400 Bad Request\n{\n \"code\": 400,\n \"message\":  \"Project already exists\"\n}",
          "type": "json"
        }
      ]
    },
    "filename": "./API_docs/Project.js",
    "groupTitle": "Project"
  },
  {
    "type": "get",
    "url": "/api/tos",
    "title": "Get collection",
    "name": "Tos_api_GET",
    "group": "Tos",
    "version": "1.0.0",
    "description": "<p>This endpoint returns the entire Tos Collection as seen in the database. This endpoint will only return a MAXIMUM of 20 objects at a time, with an offset defined by the user (via the header key 'start'). If the offset is larger then the number of objects in the collection the endpoint will return 400, the number of objects in this collection can be checked using the options endpoint. If start is equal to -1 then the endpoint will return the last 20 objects in reversed order. By providing the match key, this endpoint will filter through the database for urls matching the keys value. Note that one of start/match must exist.</p>",
    "parameter": {
      "fields": {
        "Headers": [
          {
            "group": "Headers",
            "type": "Int",
            "optional": false,
            "field": "start",
            "description": "<p>The number of objects to offset query by.</p>"
          },
          {
            "group": "Headers",
            "type": "String",
            "optional": false,
            "field": "match",
            "description": "<p>The desired search query to match url.</p>"
          }
        ]
      }
    },
    "success": {
      "fields": {
        "Success 200": [
          {
            "group": "Success 200",
            "type": "ObjectId",
            "optional": false,
            "field": "_id",
            "description": "<p>Unique id generated by MongoDb.</p>"
          },
          {
            "group": "Success 200",
            "type": "String",
            "optional": false,
            "field": "date_reviewed",
            "description": "<p>Timestamp of when the entry was created in database.</p>"
          },
          {
            "group": "Success 200",
            "type": "String",
            "optional": false,
            "field": "url",
            "description": "<p>Url to the Terms Of Service location.</p>"
          },
          {
            "group": "Success 200",
            "type": "Array",
            "optional": false,
            "field": "statements",
            "description": "<p>Contains each statement and its revisions as an object.</p>"
          },
          {
            "group": "Success 200",
            "type": "String",
            "optional": false,
            "field": "text",
            "description": "<p>Text of the statement.</p>"
          },
          {
            "group": "Success 200",
            "type": "String",
            "optional": false,
            "field": "tag",
            "description": "<p>Tags of the statement, assigned by an analyst.</p>"
          },
          {
            "group": "Success 200",
            "type": "String",
            "optional": false,
            "field": "comment",
            "description": "<p>Comment of a statement, assigned by an analyst.</p>"
          },
          {
            "group": "Success 200",
            "type": "String",
            "optional": false,
            "field": "risk_assessment",
            "description": "<p>Risk assessment for this version of the Tos, generated by an analyst.</p>"
          },
          {
            "group": "Success 200",
            "type": "String",
            "optional": false,
            "field": "dom",
            "description": "<p>Text/HTML dom of the Tos.</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "Success-Response:",
          "content": "HTTP/1.1 200 OK\n[\n     {\n         \"_id\":\"5b1ef5e21c74671a303ff4dd\",\n         \"date_reviewed\":\"2018-04-05\",\n         \"url\":\"https://help.instagram.com/478745558852511\",\n         \"statements\":[\n              {\n                  \"text\":\"text0\",\n                  \"tag\":[\"money\",\"tags\"],\n                  \"comment\":\"needs revision\"\n             },\n             {\n                 \"text\":\"text1\",\n                 \"tag\":[\"money\",\"tags\"],\n                 \"comment\":\"\"\n             },\n         ],\n         \"risk_assessment\":\"lroao qentaro\",\n         \"dom\":\"Dom 2\"\n     },\n]",
          "type": "json"
        }
      ]
    },
    "error": {
      "examples": [
        {
          "title": "ERROR: Key out of range",
          "content": "HTTP/1.1 400 Bad Request\n{\n \"code\": 400,\n \"message\": \"'start' must be less than the number of objects in the collection (3)\"\n}",
          "type": "json"
        },
        {
          "title": "ERROR: Key DNE or not an integer",
          "content": "HTTP/1.1 400 Bad Request\n{\n \"code\": 400,\n \"message\": \"request must have the header 'start' with a valid integer value.\"\n}",
          "type": "json"
        }
      ]
    },
    "filename": "./API_docs/Tos.js",
    "groupTitle": "Tos"
  },
  {
    "type": "options",
    "url": "/api/tos",
    "title": "Options",
    "name": "Tos_api_Options",
    "group": "Tos",
    "version": "1.0.0",
    "description": "<p>This request will add return the allowed methods, and number of objects in the collection for this endpoint.</p>",
    "success": {
      "fields": {
        "Success 200": [
          {
            "group": "Success 200",
            "type": "Array",
            "optional": false,
            "field": "allowed_methods",
            "description": "<p>Methods allowed for this endpoint.</p>"
          },
          {
            "group": "Success 200",
            "type": "Int",
            "optional": false,
            "field": "number_of_objects",
            "description": "<p>Number of objects in the Tos collection.</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "Success-Response:",
          "content": "HTTP/1.1 200 OK\n{\n    \"allowed_methods\": [\"GET\", \"POST\"],\n    \"number_of_objects\": 4\n}",
          "type": "json"
        }
      ]
    },
    "filename": "./API_docs/Tos.js",
    "groupTitle": "Tos"
  },
  {
    "type": "post",
    "url": "/api/tos",
    "title": "Add an entry",
    "name": "Tos_api_POST",
    "group": "Tos",
    "version": "1.0.0",
    "description": "<p>This request will add an object to the Tos collection based on the json body posted. Before an entry is made, the server will check that url, statements, risk_assessment, and dom keys are present and valid. For all entries with url's not already in db a new object is added to the TosVersions collection, mapping this version of the Tos to the parent (all versions). For all entries with url's in the db, an id mapping TosVersion to this version is appended. Currently this endpoint will only except one object at a time, but in the future you will be able to send a list of objects.</p>",
    "parameter": {
      "fields": {
        "Parameter": [
          {
            "group": "Parameter",
            "type": "String",
            "optional": false,
            "field": "url",
            "description": "<p>Url to the Terms Of Service location (same between all versions of a Tos).</p>"
          },
          {
            "group": "Parameter",
            "type": "Array",
            "optional": false,
            "field": "statements",
            "description": "<p>Contains each statement and its revisions as an object (text, tag, comment).</p>"
          },
          {
            "group": "Parameter",
            "type": "String",
            "optional": false,
            "field": "text",
            "description": "<p>Text of the statement.</p>"
          },
          {
            "group": "Parameter",
            "type": "String",
            "optional": false,
            "field": "tag",
            "description": "<p>Tags of the statement, assigned by an analyst.</p>"
          },
          {
            "group": "Parameter",
            "type": "String",
            "optional": false,
            "field": "comment",
            "description": "<p>Comment of a statement, assigned by an analyst.</p>"
          },
          {
            "group": "Parameter",
            "type": "String",
            "optional": false,
            "field": "risk_assessment",
            "description": "<p>Risk assessment for this version of the Tos, generated by an analyst.</p>"
          },
          {
            "group": "Parameter",
            "type": "String",
            "optional": false,
            "field": "dom",
            "description": "<p>Text/HTML dom of the Tos.</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "Request-Example:",
          "content": "{\n    \"url\":\"https://help.instagram.com/478745558852511\",\n    \"statements\":[\n        {\n            \"text\":\"text0\",\n            \"tag\":[\"money\",\"tags\"],\n            \"comment\":\"needs revision\"\n        },\n        {\n            \"text\":\"text1\",\n            \"tag\":[\"money\",\"tags\"],\n            \"comment\":\"\"\n        }\n     ],\n     \"risk_assessment\":\"lroao qentaro\",\n     \"dom\":\"Dom 2\"\n}",
          "type": "json"
        }
      ]
    },
    "success": {
      "examples": [
        {
          "title": "Success-Response:",
          "content": "HTTP/1.1 200 OK",
          "type": "json"
        }
      ]
    },
    "error": {
      "examples": [
        {
          "title": "Error-Response",
          "content": "HTTP/1.1 400 Bad Request",
          "type": "json"
        }
      ]
    },
    "filename": "./API_docs/Tos.js",
    "groupTitle": "Tos"
  },
  {
    "type": "delete",
    "url": "/api/tos/:id",
    "title": "Delete an entry",
    "name": "Tos_object_api_DELETE",
    "group": "Tos",
    "version": "1.0.0",
    "description": "<p>With this request you can delete a Tos collection object with a given id. Once sent this version of the Tos, and all instances in TosVersions collection will be permanently deleted. Use this endpoint with care, use GET /api/tos/:id to verify that the id to delete is correct.</p>",
    "parameter": {
      "fields": {
        "Parameter": [
          {
            "group": "Parameter",
            "type": "String",
            "optional": false,
            "field": ":id",
            "description": "<p>ObjectId of the desired Tos Collection entry.</p>"
          }
        ]
      }
    },
    "success": {
      "examples": [
        {
          "title": "Success-Response:",
          "content": "HTTP/1.1 200",
          "type": "json"
        }
      ]
    },
    "error": {
      "examples": [
        {
          "title": "Error-Response",
          "content": "HTTP/1.1 400 Bad Request",
          "type": "json"
        }
      ]
    },
    "filename": "./API_docs/Tos.js",
    "groupTitle": "Tos"
  },
  {
    "type": "get",
    "url": "/api/tos/:id",
    "title": "Get a specific object",
    "name": "Tos_object_api_GET",
    "group": "Tos",
    "version": "1.0.0",
    "description": "<p>This endpoint returns the data for one version of a Tos as an object.</p>",
    "parameter": {
      "fields": {
        "Parameter": [
          {
            "group": "Parameter",
            "type": "String",
            "optional": false,
            "field": ":id",
            "description": "<p>ObjectId of the desired Tos Collection entry</p>"
          }
        ]
      }
    },
    "success": {
      "fields": {
        "Success 200": [
          {
            "group": "Success 200",
            "type": "String",
            "optional": false,
            "field": "_id",
            "description": "<p>Unique id generated by MongoDb.</p>"
          },
          {
            "group": "Success 200",
            "type": "String",
            "optional": false,
            "field": "date_reviewed",
            "description": "<p>Timestamp of when the entry was created in database.</p>"
          },
          {
            "group": "Success 200",
            "type": "String",
            "optional": false,
            "field": "url",
            "description": "<p>Url to the Terms Of Service location.</p>"
          },
          {
            "group": "Success 200",
            "type": "Array",
            "optional": false,
            "field": "statements",
            "description": "<p>Contains each statement and its revisions as an object.</p>"
          },
          {
            "group": "Success 200",
            "type": "String",
            "optional": false,
            "field": "text",
            "description": "<p>Text of the statement.</p>"
          },
          {
            "group": "Success 200",
            "type": "String",
            "optional": false,
            "field": "tag",
            "description": "<p>Tags of the statement, assigned by an analyst.</p>"
          },
          {
            "group": "Success 200",
            "type": "String",
            "optional": false,
            "field": "comment",
            "description": "<p>Comment of a statement, assigned by an analyst.</p>"
          },
          {
            "group": "Success 200",
            "type": "String",
            "optional": false,
            "field": "risk_assessment",
            "description": "<p>Risk assessment for this version of the Tos, generated by an analyst.</p>"
          },
          {
            "group": "Success 200",
            "type": "String",
            "optional": false,
            "field": "dom",
            "description": "<p>Text/HTML dom of the Tos.</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "Success-Response:",
          "content": "HTTP/1.1 200 OK\n{\n    \"_id\":\"5b1ef5e21c74671a303ff4dd\",\n    \"date_reviewed\":\"2018-04-05\",\n    \"url\":\"https://help.instagram.com/478745558852511\",\n    \"statements\":[\n        {\n            \"text\":\"text0\",\n            \"tag\":[\"money\",\"tags\"],\n            \"comment\":\"needs revision\"\n        },\n        {\n            \"text\":\"text1\",\n            \"tag\":[\"money\",\"tags\"],\n            \"comment\":\"\"\n        }\n     ],\n     \"risk_assessment\":\"lroao qentaro\",\n     \"dom\":\"Dom 2\"\n}",
          "type": "json"
        }
      ]
    },
    "filename": "./API_docs/Tos.js",
    "groupTitle": "Tos"
  },
  {
    "type": "patch",
    "url": "/api/tos/:id",
    "title": "Add a statement",
    "name": "Tos_object_api_PATCH",
    "group": "Tos",
    "version": "1.0.0",
    "description": "<p>This request will append the desired object to the statement array in Tos Collection. Ensure that the patched object is properly formatted as seen below, no checks are made to the value key so data will appended as is.</p>",
    "parameter": {
      "fields": {
        "Parameter": [
          {
            "group": "Parameter",
            "type": "String",
            "optional": false,
            "field": ":id",
            "description": "<p>ObjectId of the desired Tos Collection entry.</p>"
          },
          {
            "group": "Parameter",
            "type": "String",
            "optional": false,
            "field": "key",
            "description": "<p>Targeted key to be changed.</p>"
          },
          {
            "group": "Parameter",
            "type": "Object",
            "optional": false,
            "field": "value",
            "description": "<p>New value of the targeted key, be sure to properly format the statement value (include text, tag, and comments as seen below).</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "Request-Example:",
          "content": "\t{\n\t    \"key\":\"statements\",\n \t\"value\": {\n\t                  \"text\":\"text0\",\n\t                  \"tag\":[\"money\",\"tags\"],\n\t                  \"comment\":\"needs revision\"\n\t             }\n\t}",
          "type": "json"
        }
      ]
    },
    "success": {
      "examples": [
        {
          "title": "Success-Response:",
          "content": "HTTP/1.1 200",
          "type": "json"
        }
      ]
    },
    "error": {
      "examples": [
        {
          "title": "Error-Response",
          "content": "HTTP/1.1 400 Bad Request",
          "type": "json"
        }
      ]
    },
    "filename": "./API_docs/Tos.js",
    "groupTitle": "Tos"
  },
  {
    "type": "put",
    "url": "/api/tos/:id",
    "title": "Replace statement array",
    "name": "Tos_object_api_PUT",
    "group": "Tos",
    "version": "1.0.0",
    "description": "<p>This endpoint will replace the statements key (Tos collection) with given object. It is useful when you want to delete a statement, simply get the statements, copy object ignoring the unwanted values, then use this endpoint to replace the db version with your local copy. This endpoint can also replace any desired key with a desired value.</p>",
    "parameter": {
      "fields": {
        "Parameter": [
          {
            "group": "Parameter",
            "type": "String",
            "optional": false,
            "field": ":id",
            "description": "<p>ObjectId of the desired Tos Collection entry.</p>"
          },
          {
            "group": "Parameter",
            "type": "String",
            "optional": false,
            "field": "key",
            "description": "<p>Targeted key to be changed.</p>"
          },
          {
            "group": "Parameter",
            "type": "Array",
            "optional": false,
            "field": "value",
            "description": "<p>New value of the targeted key, be sure to properly format the statement (include text, tag, and comments as seen below).</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "Request-Example:",
          "content": "\t{\n\t    \"key\":\"statements\",\n \t\"value\": [{\n\t                  \"text\":\"text0\",\n\t                  \"tag\":[\"money\",\"tags\"],\n\t                  \"comment\":\"needs revision\"\n\t             }]\n\t}",
          "type": "json"
        }
      ]
    },
    "success": {
      "examples": [
        {
          "title": "Success-Response:",
          "content": "HTTP/1.1 200",
          "type": "json"
        }
      ]
    },
    "error": {
      "examples": [
        {
          "title": "Error-Response",
          "content": "HTTP/1.1 400 Bad Request",
          "type": "json"
        }
      ]
    },
    "filename": "./API_docs/Tos.js",
    "groupTitle": "Tos"
  },
  {
    "type": "get",
    "url": "/api/tos/versions",
    "title": "Get collection",
    "name": "TosVersions_api_GET",
    "group": "TosVersions",
    "version": "1.0.0",
    "description": "<p>This endpoint returns the entire TosVersions Collection as seen in the database. This endpoint will only return a MAXIMUM of 20 objects at a time, with an offset defined by the user (via the header key 'start'). If the offset is larger then the number of objects in the collection the endpoint will return 400, the number of objects in this collection can be checked using the options endpoint. If start is equal to -1 then the endpoint will return the last 20 objects in reversed order. By providing the match key, this endpoint will filter through the database for urls matching the keys value. Note that one of start/match must exist.</p>",
    "parameter": {
      "fields": {
        "Headers": [
          {
            "group": "Headers",
            "type": "Int",
            "optional": false,
            "field": "start",
            "description": "<p>The number of objects to offset query by.</p>"
          },
          {
            "group": "Headers",
            "type": "String",
            "optional": false,
            "field": "match",
            "description": "<p>The desired search query to match url.</p>"
          }
        ]
      }
    },
    "success": {
      "fields": {
        "Success 200": [
          {
            "group": "Success 200",
            "type": "ObjectId",
            "optional": false,
            "field": "_id",
            "description": "<p>Unique id generated by MongoDb.</p>"
          },
          {
            "group": "Success 200",
            "type": "String",
            "optional": false,
            "field": "date_created",
            "description": "<p>Timestamp of when the entry was created in database.</p>"
          },
          {
            "group": "Success 200",
            "type": "String",
            "optional": false,
            "field": "url",
            "description": "<p>Url to the Terms Of Service location.</p>"
          },
          {
            "group": "Success 200",
            "type": "Array",
            "optional": false,
            "field": "versions",
            "description": "<p>Contains ObjectId's (strings) of each of its versions which is mapped to entries in Tos collection.</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "Success-Response:",
          "content": "HTTP/1.1 200 OK\n[{\n      \"_id\":\"5b1ef5e21c74671a303ff4de\",\n      \"date_created\":\"2018-06-12\",\n      \"url\":\"https://help.instagram.com/478745558852511\",\n      \"versions\":[\n          {\n             \"_id\": \"5b1ef5e21c74671a303ff4dd\",\n             \"date_created\": \"2018-06-12\"\n          },\n          {\n             \"_id\": \"5b1ef5f41c74671a303ff4df\"\n             \"date_created\": \"2018-06-13\"\n          }\n      ]\n }]",
          "type": "json"
        }
      ]
    },
    "error": {
      "examples": [
        {
          "title": "ERROR: Key out of range",
          "content": "HTTP/1.1 400 Bad Request\n{\n \"code\": 400,\n \"message\": \"'start' must be less than the number of objects in the collection (3)\"\n}",
          "type": "json"
        },
        {
          "title": "ERROR: Key DNE or not an integer",
          "content": "HTTP/1.1 400 Bad Request\n{\n \"code\": 400,\n \"message\": \"request must have the header 'start' with a valid integer value.\"\n}",
          "type": "json"
        }
      ]
    },
    "filename": "./API_docs/TosVersions.js",
    "groupTitle": "TosVersions"
  },
  {
    "type": "options",
    "url": "/api/tos/versions",
    "title": "Options",
    "name": "TosVersions_api_Options",
    "group": "TosVersions",
    "version": "1.0.0",
    "description": "<p>This request will add return the allowed methods, and number of objects in the collection for this endpoint.</p>",
    "success": {
      "fields": {
        "Success 200": [
          {
            "group": "Success 200",
            "type": "Array",
            "optional": false,
            "field": "allowed_methods",
            "description": "<p>Methods allowed for this endpoint.</p>"
          },
          {
            "group": "Success 200",
            "type": "Int",
            "optional": false,
            "field": "number_of_objects",
            "description": "<p>Number of objects in the TosVersions collection.</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "Success-Response:",
          "content": "HTTP/1.1 200 OK\n{\n    \"allowed_methods\": [\"GET\", \"POST\"],\n    \"number_of_objects\": 4\n}",
          "type": "json"
        }
      ]
    },
    "filename": "./API_docs/TosVersions.js",
    "groupTitle": "TosVersions"
  },
  {
    "type": "get",
    "url": "/api/tos/versions/single",
    "title": "Get a single Object",
    "name": "TosVersions_object_api_GET",
    "group": "TosVersions",
    "version": "1.0.0",
    "description": "<p>This endpoint returns a single TosVersions object as seen in the database.</p>",
    "parameter": {
      "fields": {
        "Headers": [
          {
            "group": "Headers",
            "type": "String",
            "optional": false,
            "field": "url",
            "description": "<p>The url of the object to query.</p>"
          }
        ]
      }
    },
    "success": {
      "fields": {
        "Success 200": [
          {
            "group": "Success 200",
            "type": "String",
            "optional": false,
            "field": "_id",
            "description": "<p>Unique id generated by MongoDb.</p>"
          },
          {
            "group": "Success 200",
            "type": "String",
            "optional": false,
            "field": "date_created",
            "description": "<p>Timestamp of when the entry was created in database.</p>"
          },
          {
            "group": "Success 200",
            "type": "String",
            "optional": false,
            "field": "url",
            "description": "<p>Url to the Terms Of Service location.</p>"
          },
          {
            "group": "Success 200",
            "type": "Array",
            "optional": false,
            "field": "versions",
            "description": "<p>Contains ObjectId's (strings) of each of its versions which is mapped to entries in Tos collection.</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "Success-Response:",
          "content": "HTTP/1.1 200 OK\n{\n      \"_id\":\"5b1ef5e21c74671a303ff4de\",\n      \"date_created\":\"2018-06-12\",\n      \"url\":\"https://help.instagram.com/478745558852511\",\n      \"versions\":[\n          {\n             \"_id\": \"5b1ef5e21c74671a303ff4dd\",\n             \"date_created\": \"2018-06-12\"\n          },\n          {\n             \"_id\": \"5b1ef5f41c74671a303ff4df\"\n             \"date_created\": \"2018-06-13\"\n          }\n      ]\n }",
          "type": "json"
        }
      ]
    },
    "filename": "./API_docs/TosVersions.js",
    "groupTitle": "TosVersions"
  }
]
